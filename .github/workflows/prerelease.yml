name: Pre-release

# Creates an automatic prerelease on pushes on dev. Further checks are not
# required as some security rules are set on dev branch yet, disabling pushes
# without passed status checks.
# The action generates a prerelease, but without a specific git tag: this is
# desired, as the prerelease will be cancelled after the next stable release.

on:
  push:
    branches:
      - dev

jobs:
  GithubDeploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extract version from GitSemVer
        id: genversion
        run: |
          ./gradlew :core:generateVersionFile
          echo "RELEASE_VERSION=$(cat ./core/build/version)" >> $GITHUB_ENV

      - name: Create pre-release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          prerelease: true

      - name: Generate assets
        run: ./gradlew distZip distTar

      - name: Upload Readme asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/x-markdown

      - name: Upload release assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create-release.outputs.id }}
          assets_path: |
            ./examples/escape-room/build/distributions
            ./examples/poke-quest/build/distributions
            ./examples/wizard-quest/build/distributions
            ./cli/build/libs
            ./core/build/libs

  MavenDeploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate jars
        run: ./gradlew jar sourcesJar javadocJar

      - name: Publish to Maven Central
        run: |
          ./gradlew publishAllPublicationsToMavenCentralRepository
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
