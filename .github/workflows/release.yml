name: Release

# Generates a new release, after a release/* branch is successfully
# merged into main. The tag name is inferred from the branch name.
on:
  pull_request:
    branches:
      - main
    types:
     - closed

jobs:
  Tag:
    # only merged pull requests must trigger this job
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-18.04
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set version as a job output
        id: version
        run: |
          echo "::set-output name=version::${{ env.RELEASE_VERSION }}"

      - name: Add tag
        run: |
          git config user.name releasebot
          git config user.email github-actions@github.com
          git tag ${{ env.RELEASE_VERSION }} -a -m "Release ${{ env.RELEASE_VERSION }}"
          git push --follow-tags

  GithubDeploy:
    needs: Tag
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.Tag.outputs.version }}
          release_name: ${{ needs.Tag.outputs.version }}
          prerelease: false

      - name: Create "merge into dev" pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: main
          base: dev
          title: Merge main into dev branch
          body: |
            This PR merges the main branch back into dev. This happens to ensure that the updates that happend on the release branch, i.e. CHANGELOG and manifest updates, are also present on the dev branch.

      - name: Generate assets
        run: ./gradlew distZip distTar

      - name: Upload Readme asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./README.md
          asset_name: README.md
          asset_content_type: text/x-markdown

      - name: Upload release assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create-release.outputs.id }}
          assets_path: |
            ./examples/escape-room/build/distributions
            ./examples/poke-quest/build/distributions
            ./examples/wizard-quest/build/distributions
            ./cli/build/libs
            ./core/build/libs

  MavenDeploy:
    needs: Tag
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate jars
        run: ./gradlew jar sourcesJar javadocJar

      - name: Publish to Maven Central
        run: ./gradlew publishAllPublicationsToMavenCentralRepository
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

  Scaladoc:
    runs-on: ubuntu-18.04
    needs:
      - MavenDeploy
      - GithubDeploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate Scaladoc and reports
        run: |
          ./gradlew :core:scaladoc
          ./gradlew :cli:scaladoc
          ./gradlew :core:reportScoverage
          ./gradlew :cli:reportScoverage

      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages

      - name: Push Scaladoc to gh-pages
        run: |
          rm -rf gh-pages/{scaladoc,coverage}
          mkdir gh-pages/{scaladoc,coverage} -p

          mv core/build/docs/scaladoc gh-pages/scaladoc/core
          mv cli/build/docs/scaladoc gh-pages/scaladoc/cli
          mv core/build/reports/scoverage gh-pages/coverage/core
          mv cli/build/reports/scoverage gh-pages/coverage/cli

          cd gh-pages
          git config user.name Docubot
          git config user.email github-actions@github.com
          git add scaladoc
          git add coverage
          git commit -m "Update Scaladoc"
          git push
