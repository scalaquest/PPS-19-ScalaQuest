name: CI

# Continuous Integration workflow, which aims to assure correctness and
# quality of the sources that converges into the stable branches (dev and main).

on:
  push:
    branches:
      - main
      - dev
      - 'release/*'
      - 'hotfix/*'

  pull_request:
    branches:
      - dev

jobs:
  ci:
    name: Lint, build and test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # right refs for sonarcloud

        # The project uses by default Java 11 (LTS) with scala 2.13
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

        # run it on the entire matrix would be overkill
      - name: Lint sources
        if: contains(runner.os, 'Linux')
        run: ./gradlew spotlessCheck

      - name: Compile sources
        run: ./gradlew assemble

      - name: Test sources
        run: ./gradlew check

      - name: Check coverage
        if: contains(runner.os, 'Linux')
        run: ./gradlew checkScoverage
