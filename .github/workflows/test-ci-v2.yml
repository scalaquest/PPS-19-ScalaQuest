name: Scala with Gradle CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
      - feature/new-gradle-build
  pull_request:
    branches:
      - main

jobs:
  StyleCheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

          # The project uses java 11 (LTS) with scala 2.13
          #- name: Set up JDK 11
          #uses: actions/setup-java@v1
          #with:
          #java-version: 11

          # Use cache if available for Gradle
          #- name: Cache Gradle packages
          #uses: actions/cache@v2
          #with:
          #path: |
          #~/.gradle/caches
          #~/.gradle/wrapper
          #key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          #restore-keys: |
        #${{ runner.os }}-gradle-

        #- name: Check Scala formatting with Spotless
        #run: ./gradlew spotlessCheck

  Compile:
    # The matrix runs only if the scala style is correct
    needs: StyleCheck
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        #os: [ ubuntu-latest, macOS-latest, windows-latest ]
        os: [ ubuntu-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # The project uses java 11 (LTS) with scala 2.13
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Use cache if available for Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble Scala sources with Gradle
        run: ./gradlew assemble

      - name: Publish ${{ runner.os }} workspace
        if: ${{ runner.os }} == "Linux"
        uses: actions/upload-artifact@v2
        with:
         name: ${{ runner.os }}-workspace
         path: |
          ${{ github.workspace }}/build
          ${{ github.workspace }}/buildSrc
          ${{ github.workspace }}/cli
          ${{ github.workspace }}/core
          ${{ github.workspace }}/examples




  Test:
    runs-on: ubuntu-latest
    needs: [StyleCheck, Compile]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # The project uses java 11 (LTS) with scala 2.13
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Use cache if available for Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Download workspace
        uses: actions/download-artifact@v2
        with:
          name: Linux-workspace
          path: ${{ github.workspace }}



      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ${{ github.workspace }}

      - name: Check and Test with Gradle
        run: ./gradlew check
