/*
 * Copyright (c) 2021 ScalaQuest Team.
 *
 * This file is part of ScalaQuest, and is distributed under the terms of the MIT License as
 * described in the file LICENSE in the ScalaQuest distribution's top directory.
 */

package io.github.scalaquest.core.application

import cats.Functor
import io.github.scalaquest.core.dictionary.ProgramFromDictionary
import io.github.scalaquest.core.dictionary.generators.GeneratorK
import io.github.scalaquest.core.dictionary.verbs.{Verb, VerbPrep}
import io.github.scalaquest.core.model.{Action, ItemRef, Model}

import scala.io.Source

/**
 * Provides the theory and the structures needed by the application, given a set of items and a set
 * of verbs.
 */
trait DictionaryProvider[M0 <: Model] extends ApplicationStructure[M0] {
  import io.github.scalaquest.core.dictionary.generators.implicits.listToMapGenerator
  import io.github.scalaquest.core.dictionary.implicits.{itemToEntryGenerator, verbToEntryGenerator}

  /** The set of verbs used by the application. */
  def verbs: Set[Verb]

  /** The set of items used by the application. */
  def items: Set[I]

  /**
   * The theory generated by the combination of static generic code and the dynamically generated
   * one.
   */
  def baseTheory: String = programFromResource(baseTheoryPath)

  /** The path of the static theory. */
  final def baseTheoryPath: String = "base.pl"

  /** The `Map` that associates every `ItemRef` to the item itself. */
  final def refToItem: Map[ItemRef, I] = GeneratorK[List, I, Map[ItemRef, I]].generate(items.toList)

  /** The `Map` that associates every pair `(Verb, Preposition)` to its action. */
  final def verbToAction: Map[VerbPrep, Action] =
    GeneratorK[List, Verb, Map[VerbPrep, Action]].generate(verbs.toList)

  private final def programSource[F[_]: Functor](base: F[String]): F[String] =
    ProgramFromDictionary(verbs, items).generateSource(base)

  private final def programFromResource(resourceName: String): String = {
    type Id[X] = X
    programSource[Id](Source.fromResource(resourceName).mkString)
  }
}
